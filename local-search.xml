<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kafka单机搭建(信任认证/口令认证)</title>
    <link href="/2023/06/16/Kafka%E5%8D%95%E6%9C%BA%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/06/16/Kafka%E5%8D%95%E6%9C%BA%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>由于在学习Kafka的过程中发现详细全面的Kafka搭建及Schema Registry搭建资料较少，踩坑较多，所以输出这篇记录我的Kafka搭建过程。</p><h2 id="1-信任认证Kafka搭建"><a href="#1-信任认证Kafka搭建" class="headerlink" title="1. 信任认证Kafka搭建"></a>1. 信任认证Kafka搭建</h2><h3 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1. 下载安装包"></a>1. 下载安装包</h3><p>首先第一步下载Kafka对应的安装包， 在 <a href="https://kafka.apache.org/downloads">Kafka安装包下载地址</a> 中下载自己需要版本的包，注意下载Binary downloads下的包，不是src包。</p><p>本次我是用的是kafka_2.13-2.8.2.tgz，其中2.13为Scala版本，2.8.2才是Kafka的版本。</p><h3 id="2-解压"><a href="#2-解压" class="headerlink" title="2. 解压"></a>2. 解压</h3><p>解压Kafka包到指定目录，我选择的是&#x2F;usr&#x2F;local&#x2F;kafka。</p><h3 id="3-Zookeeper"><a href="#3-Zookeeper" class="headerlink" title="3. Zookeeper"></a>3. Zookeeper</h3><p>目前装的这个版本的Kafka还是依赖Zookeeper的。</p><h4 id="1-配置"><a href="#1-配置" class="headerlink" title="1. 配置"></a>1. 配置</h4><p>Kafka安装包自带Zookeeper，配置文件位于<strong>config&#x2F;zookeeper.properties</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">dataDir=/tmp/zookeeper<br>clientPort=2181<br>maxClientCnxns=60<br>admin.enableServer=<span class="hljs-literal">false</span><br><span class="hljs-comment"># admin.serverPort=8080</span><br></code></pre></td></tr></table></figure><p>其中，dataDir为数据目录，主要存储事务日志和快照；</p><p>maxClientCnxns为ZooKeeper 服务器与客户端的最大连接数；</p><p>admin.enableServer指定是否启用远程 JMX 服务器。</p><h4 id="2-启动"><a href="#2-启动" class="headerlink" title="2. 启动"></a>2. 启动</h4><p>信任认证直接正常脚本启动就好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./zookeeper-server-start.sh /usr/local/kafka/config/zookeeper.properties  &gt;&gt; &#123;日志输出目的地&#125; 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h3 id="4-Kafka"><a href="#4-Kafka" class="headerlink" title="4. Kafka"></a>4. Kafka</h3><h4 id="1-配置-1"><a href="#1-配置-1" class="headerlink" title="1. 配置"></a>1. 配置</h4><p>配置文件位于<strong>config&#x2F;server.properties</strong>。</p><p>信任认证的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">listeners=PLAINTEXT://&#123;ip&#125;:9092<br></code></pre></td></tr></table></figure><p>如果zookeeper改了端口记得改对应的。其他按需改就好。</p><h4 id="2-启动-1"><a href="#2-启动-1" class="headerlink" title="2. 启动"></a>2. 启动</h4><p>这里也是直接正常脚本读配置启动就好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/local/kafka/bin/kafka-server-start.sh /usr/local/kafka/config/server.properties  &gt;&gt; &#123;日志输出目的地&#125; 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h2 id="2-口令认证Kafka搭建"><a href="#2-口令认证Kafka搭建" class="headerlink" title="2. 口令认证Kafka搭建"></a>2. 口令认证Kafka搭建</h2><blockquote><p>一样的操作在此不做赘述。主要讲配置和启动的不同。</p></blockquote><h3 id="1-Zookeeper"><a href="#1-Zookeeper" class="headerlink" title="1. Zookeeper"></a>1. Zookeeper</h3><h4 id="1-配置-2"><a href="#1-配置-2" class="headerlink" title="1. 配置"></a>1. 配置</h4><p>首先添加一个jaas设置用户名密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">Server &#123;<br>       org.apache.zookeeper.server.auth.DigestLoginModule required<br>       user_admin=<span class="hljs-string">&quot;123456&quot;</span><br>       user_root=<span class="hljs-string">&quot;123456&quot;</span><br>       ;<br>&#125;;<br>Client &#123;<br>       org.apache.zookeeper.server.auth.DigestLoginModule required<br>       username=<span class="hljs-string">&quot;admin&quot;</span><br>       password=<span class="hljs-string">&quot;123456&quot;</span><br>       ;<br>&#125;;<br></code></pre></td></tr></table></figure><p>在zookeeper.properties中也要加入对应参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">###########################</span><br>authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider<br>requireClientAuthScheme=sasl<br>jaasLoginRenew=3600000<br></code></pre></td></tr></table></figure><h4 id="2-启动-2"><a href="#2-启动-2" class="headerlink" title="2. 启动"></a>2. 启动</h4><p>注意，口令认证的话需要export参数，建议直接将这两行写为脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KAFKA_OPTS=<span class="hljs-string">&quot;-Djava.security.auth.login.config=&#123;addr&#125;/zookeeper_jaas.conf&quot;</span><br>./zookeeper-server-start.sh /usr/local/kafka/config/zookeeper.properties  &gt;&gt; &#123;日志输出目的地&#125; 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h3 id="2-Kafka"><a href="#2-Kafka" class="headerlink" title="2. Kafka"></a>2. Kafka</h3><h4 id="1-配置-3"><a href="#1-配置-3" class="headerlink" title="1. 配置"></a>1. 配置</h4><p>首先添加一个jaas设置用户名密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">KafkaServer&#123;<br>    org.apache.kafka.common.security.plain.PlainLoginModule required<br>    username=<span class="hljs-string">&quot;root&quot;</span><br>    password=<span class="hljs-string">&quot;123456&quot;</span><br>    user_root=<span class="hljs-string">&quot;123456&quot;</span><br>    user_k1=<span class="hljs-string">&quot;k1123456&quot;</span><br>    user_k2=<span class="hljs-string">&quot;k2123456&quot;</span><br>    user_k3=<span class="hljs-string">&quot;k3123456&quot;</span>;<br>&#125;;<br>Client&#123;<br>    org.apache.zookeeper.server.auth.DigestLoginModule required<br>    username=<span class="hljs-string">&quot;root&quot;</span><br>    password=<span class="hljs-string">&quot;123456&quot;</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p>在server.properties中也要加入对应参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#################################</span><br>listeners=SASL_PLAINTEXT://&#123;ip&#125;:9092<br>advertised.listeners=SASL_PLAINTEXT://&#123;ip&#125;:9092<br>security.inter.broker.protocol=SASL_PLAINTEXT<br>sasl.enabled.mechanisms=PLAIN<br>sasl.mechanism.inter.broker.protocol=PLAIN<br></code></pre></td></tr></table></figure><h4 id="2-启动-3"><a href="#2-启动-3" class="headerlink" title="2. 启动"></a>2. 启动</h4><p>注意，口令认证的话需要export参数，建议直接将这两行写为脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KAFKA_OPTS=<span class="hljs-string">&quot;-Djava.security.auth.login.config=&#123;addr&#125;/kafka_jaas.conf&quot;</span><br>/usr/local/kafka/bin/kafka-server-start.sh /usr/local/kafka/config/server.properties  &gt;&gt; &#123;日志输出目的地&#125; 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>operate</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kafka</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
